/*
 * app_memory.cfs
 *  This file assigns the memory space of the DSP core
 *  Created on: Nov 12, 2015
 *      Author: L_Rui
 *  --------------------------------------------------------------------------
 *  app_memory.cfs
 *  - DSP core memory allocation
 *  --------------------------------------------------------------------------
 *  Revision: 0.1
 *  Modified date: Jan 20, 2016
 */


#include <sk4_sys.cfi>
#include "app.cfi"

    //
    // Start an absolute segment for the stack
    //
    Sys_Mem_Start_Absolute_Segment(X_System_Stack_Memory_Reserved, \
                                   SYS_MEMSPACE_X,                 \
                                   (D_XMEM_TOP - STACK_SIZE + 1))
    // Allocate memory for the stack
    Sys_Mem_Reserve(X_STACK_BOTTOM, STACK_SIZE)
    
    
    // ----------------------------------------------------------------------------

    //
    // Start an absolute segment for the WOLA analysis results
    //
    Sys_Mem_Start_Absolute_Segment(X_System_Analysis_Results_Memory_Reserved, \
                                   SYS_MEMSPACE_X,                            \
                                   X_ANALYSIS_RESULTS_BASE)
    // Allocate memory for the analysis results. This buffer is also used during
    // WOLA analysis and synthesis for intermediate data storage.
    Sys_Mem_Reserve(X_ANALYSIS_RESULTS, WOLA_N)
// ----------------------------------------------------------------------------

    //
    // Start an absolute segment for the WOLA intermediate data in H23MEM
    //
    Sys_Mem_Start_Absolute_Segment(X_System_WOLA_H23_Data_Memory_Reserved, \
                                   SYS_MEMSPACE_X,                         \
                                   X_WOLA_TEMP23_BASE)
    // Allocate memory for the WOLA analysis and synthesis H23MEM intermediate
    // data storage
    Sys_Mem_Reserve(X_WOLA_TEMP23_DATA, WOLA_N)
// ----------------------------------------------------------------------------

    //
    // Start an absolute segment for the gain table
    //
    Sys_Mem_Start_Absolute_Segment(X_System_Gain_Table_Memory_Reserved, \
                                   SYS_MEMSPACE_X,                      \
                                   X_GAIN_TABLE_BASE)
    // Allocate memory for the gain table
    Sys_Mem_Reserve_Init(X_GAIN_TABLE, GAIN_TABLE_SIZE, UNITY_GAIN)
// ----------------------------------------------------------------------------

    //
    // Start an absolute segment for the gain table
    //
    Sys_Mem_Start_Absolute_Segment(X_FFT_MERGY_Reserved, \
                                   SYS_MEMSPACE_X,                      \
                                   X_FFT_MERGY_BASE)
    // Allocate memory for the gain table
    Sys_Mem_Reserve_Init(X_FFT_MERGY, 24, 0x0)
// ----------------------------------------------------------------------------
 
     //
    // Start an absolute segment for the gain table
    //
    Sys_Mem_Start_Absolute_Segment( X_ENERGY_SORTING_Reserved, \
                                   SYS_MEMSPACE_X,                      \
                                    X_ENERGY_SORTING_BASE)
    // Allocate memory for the gain table
    Sys_Mem_Reserve_Init(X_ENERGY_SORTING, 24, 0x0)
// ----------------------------------------------------------------------------
 
       //
    // Start an absolute segment for the gain table
    //
    Sys_Mem_Start_Absolute_Segment( X_ENERGY_SORTING_EL_Reserved, \
                                   SYS_MEMSPACE_X,                      \
                                    X_ENERGY_SORTING_EL_BASE)
    // Allocate memory for the gain table
    Sys_Mem_Reserve_Init(X_ENERGY_SORTING_EL, 24, 0x0)
  
  
  
  
    //
    // Reserve memory for each of the FIFOs using the macro
    // generated by the HCT (see the HCT-generated include file)
    //
    HCT_FIFO_Reserve_Mem
// -----------------------------------------------------------------------------------------------------------------//
// -----------------------------------------------------------------------------------------------------------------//
    
    
    
    //
    // Start an absolute segment for the stack
    //
    Sys_Mem_Start_Absolute_Segment(X_System_PCM_Data_Memory_Reserved, \
                                   SYS_MEMSPACE_X,                 \
                                   (D_XMEM_TOP - STACK_SIZE -PCM_DATA_MEM + 1))
    .global X_PCM_DATA
    X_PCM_DATA:
        .data           0x000000
        .data           0x00FFFF
        .data           0x00FFFF
        .data           0x00FFFF
        .data           0x00C000
        .data           0x000000
        .data           0x00FFFF
        .data           0x00FFFF
        .data           0x00FFFF
        .data           0x00C000
        .data           0x000000
        .data           0x00FFFF
        .data           0x00FFFF
        .data           0x00FFFF
        .data           0x00C000
        .data           0x000000

    //
    // Start a relocatable segment for variables in X-memory
    //
    Sys_Mem_Start_Segment(X_System_Memory_Reserved, \
                          SYS_MEMSPACE_X)

    // Initialize X_CM3_0_DONE to 0
    Sys_Mem_Reserve_Init(X_CM3_0_DONE, 1, 0)
    // Initialize X_CM3_1_DONE to 0
    Sys_Mem_Reserve_Init(X_CM3_1_DONE, 1, 0)
    
    Sys_Mem_Reserve_Init(X_CMD_CNT, 1, 1)
    
    Sys_Mem_Reserve_Init(X_PATTERN_CNT, 1, 0)

    //\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\                      
    // Initialize X_FIFO_0_DONE to 0
    Sys_Mem_Reserve_Init(X_FIFO_0_DONE, 1, 0)
    
    // Initialize X_HEAR_FUNCTION_CHAIN0_DONE to 0
    Sys_Mem_Reserve_Init(X_HEAR_FUNCTION_CHAIN0_DONE, 1, 0)
    
    // Initialize X_HEAR_FUNCTION_CHAIN1_DONE to 0
    Sys_Mem_Reserve_Init(X_HEAR_FUNCTION_CHAIN1_DONE, 1, 0)

    Sys_Mem_Reserve_Init(X_FUNCTION_1, 1, 0)
    Sys_Mem_Reserve_Init(X_FUNCTION_2, 1, 0)
    Sys_Mem_Reserve_Init(X_FUNCTION_3, 1, 0)
    Sys_Mem_Reserve_Init(X_FUNCTION_4, 1, 0)
    Sys_Mem_Reserve_Init(X_FUNCTION_5, 1, 0)
    Sys_Mem_Reserve_Init(X_FUNCTION_6, 1, 0) 
    Sys_Mem_Reserve_Init(X_FUNCTION_7, 1, 0)
    Sys_Mem_Reserve_Init(X_FUNCTION_8, 1, 0)
    Sys_Mem_Reserve_Init(X_FUNCTION_9, 1, 0)

    //
    // Start a relocatable segment for variables in Y-memory
    //
    Sys_Mem_Start_Segment(Y_System_Memory_Reserved, \
                          SYS_MEMSPACE_Y)
    //\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\                      
    
    //
    // Start a MAP area (temporal)
    //
    // 8*24 \\
    Sys_Mem_Start_Absolute_Segment(Y_System_MAP_Data_Memory_Reserved, \
                                   SYS_MEMSPACE_Y, 0x200)                
      //\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\                      
      //\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\                      
                                   
    .global Y_MAP_DATA
    Y_MAP_DATA:

.data   0x0000      //Nv
.data   0x0001      //Stim Electrode
.data   0x2000      //Gain
.data   0x0203      //VC0
.data   0x0000      //VC1
.data   0x0000      //VC2
.data   0x0000      //VC3
.data   0x0000      //VC4
.data   0x0000      //Nv
.data   0x0002      //Stim Electrode
.data   0x2000      //Gain
.data   0x0205      //VC0
.data   0x0000      //VC1
.data   0x0000      //VC2
.data   0x0000      //VC3
.data   0x0000      //VC4
.data   0x0000      //Nv
.data   0x0003      //Stim Electrode
.data   0x2000      //Gain
.data   0x0207      //VC0
.data   0x0000      //VC1
.data   0x0000      //VC2
.data   0x0000      //VC3
.data   0x0000      //VC4
.data   0x0000      //Nv
.data   0x0004      //Stim Electrode
.data   0x2000      //Gain
.data   0x0209      //VC0
.data   0x0000      //VC1
.data   0x0000      //VC2
.data   0x0000      //VC3
.data   0x0000      //VC4
.data   0x0000      //Nv
.data   0x0005      //Stim Electrode
.data   0x2000      //Gain
.data   0x020B      //VC0
.data   0x0000      //VC1
.data   0x0000      //VC2
.data   0x0000      //VC3
.data   0x0000      //VC4
.data   0x0000      //Nv
.data   0x0006      //Stim Electrode
.data   0x2000      //Gain
.data   0x020D      //VC0
.data   0x0000      //VC1
.data   0x0000      //VC2
.data   0x0000      //VC3
.data   0x0000      //VC4
.data   0x0000      //Nv
.data   0x0007      //Stim Electrode
.data   0x2000      //Gain
.data   0x020F      //VC0
.data   0x0000      //VC1
.data   0x0000      //VC2
.data   0x0000      //VC3
.data   0x0000      //VC4
.data   0x0000      //Nv
.data   0x0008      //Stim Electrode
.data   0x2000      //Gain
.data   0x0211      //VC0
.data   0x0000      //VC1
.data   0x0000      //VC2
.data   0x0000      //VC3
.data   0x0000      //VC4
.data   0x0000      //Nv
.data   0x0009      //Stim Electrode
.data   0x2000      //Gain
.data   0x0213      //VC0
.data   0x0000      //VC1
.data   0x0000      //VC2
.data   0x0000      //VC3
.data   0x0000      //VC4
.data   0x0000      //Nv
.data   0x000A      //Stim Electrode
.data   0x2000      //Gain
.data   0x0315      //VC0
.data   0x0000      //VC1
.data   0x0000      //VC2
.data   0x0000      //VC3
.data   0x0000      //VC4
.data   0x0000      //Nv
.data   0x000B      //Stim Electrode
.data   0x2000      //Gain
.data   0x0318      //VC0
.data   0x0000      //VC1
.data   0x0000      //VC2
.data   0x0000      //VC3
.data   0x0000      //VC4
.data   0x0000      //Nv
.data   0x000C      //Stim Electrode
.data   0x2000      //Gain
.data   0x031B      //VC0
.data   0x0000      //VC1
.data   0x0000      //VC2
.data   0x0000      //VC3
.data   0x0000      //VC4
.data   0x0000      //Nv
.data   0x000D      //Stim Electrode
.data   0x2000      //Gain
.data   0x041E      //VC0
.data   0x0000      //VC1
.data   0x0000      //VC2
.data   0x0000      //VC3
.data   0x0000      //VC4
.data   0x0000      //Nv
.data   0x000E      //Stim Electrode
.data   0x2000      //Gain
.data   0x0522      //VC0
.data   0x0000      //VC1
.data   0x0000      //VC2
.data   0x0000      //VC3
.data   0x0000      //VC4
.data   0x0000      //Nv
.data   0x000F      //Stim Electrode
.data   0x2000      //Gain
.data   0x0527      //VC0
.data   0x0000      //VC1
.data   0x0000      //VC2
.data   0x0000      //VC3
.data   0x0000      //VC4
.data   0x0000      //Nv
.data   0x0010      //Stim Electrode
.data   0x2000      //Gain
.data   0x052C      //VC0
.data   0x0000      //VC1
.data   0x0000      //VC2
.data   0x0000      //VC3
.data   0x0000      //VC4
.data   0x0000      //Nv
.data   0x0011      //Stim Electrode
.data   0x2000      //Gain
.data   0x0631      //VC0
.data   0x0000      //VC1
.data   0x0000      //VC2
.data   0x0000      //VC3
.data   0x0000      //VC4
.data   0x0000      //Nv
.data   0x0012      //Stim Electrode
.data   0x2000      //Gain
.data   0x0737      //VC0
.data   0x0000      //VC1
.data   0x0000      //VC2
.data   0x0000      //VC3
.data   0x0000      //VC4
.data   0x0000      //Nv
.data   0x0013      //Stim Electrode
.data   0x2000      //Gain
.data   0x083E      //VC0
.data   0x0000      //VC1
.data   0x0000      //VC2
.data   0x0000      //VC3
.data   0x0000      //VC4
.data   0x0000      //Nv
.data   0x0014      //Stim Electrode
.data   0x2000      //Gain
.data   0x0946      //VC0
.data   0x0000      //VC1
.data   0x0000      //VC2
.data   0x0000      //VC3
.data   0x0000      //VC4
.data   0x0000      //Nv
.data   0x0015      //Stim Electrode
.data   0x2000      //Gain
.data   0x0A4F      //VC0
.data   0x0000      //VC1
.data   0x0000      //VC2
.data   0x0000      //VC3
.data   0x0000      //VC4
.data   0x0000      //Nv
.data   0x0016      //Stim Electrode
.data   0x2000      //Gain
.data   0x0C59      //VC0
.data   0x0000      //VC1
.data   0x0000      //VC2
.data   0x0000      //VC3
.data   0x0000      //VC4
.data   0x0000      //Nv
.data   0x0017      //Stim Electrode
.data   0x2000      //Gain
.data   0x0D65      //VC0
.data   0x0000      //VC1
.data   0x0000      //VC2
.data   0x0000      //VC3
.data   0x0000      //VC4
.data   0x0000      //Nv
.data   0x0018      //Stim Electrode
.data   0x2000      //Gain
.data   0x0E72      //VC0
.data   0x0000      //VC1
.data   0x0000      //VC2
.data   0x0000      //VC3
.data   0x0000      //VC4

    //\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\                      
    //\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\                      

    //
    // Start a MAP Stimulation area (temporal)
    //
    // 7*24 \\

    Sys_Mem_Start_Absolute_Segment(Y_System_TC_Data_Memory_Reserved, \
                                   SYS_MEMSPACE_Y, 0x400)

    .global Y_TC_DATA
    X_TC_DATA:
    
.data   0x0000      //T
.data   0x00FB      //C
.data   0x0002      //Stim Mode
.data   0x030B      //Rate padding
.data   0x0035      //Width
.data   0x0005      //Gap
.data   0x000B      //Status
.data   0x0000      //T
.data   0x00FB      //C
.data   0x0002      //Stim Mode
.data   0x030B      //Rate padding
.data   0x0035      //Width
.data   0x0005      //Gap
.data   0x0011      //Status
.data   0x0000      //T
.data   0x00FB      //C
.data   0x0002      //Stim Mode
.data   0x030B      //Rate padding
.data   0x0035      //Width
.data   0x0005      //Gap
.data   0x0019      //Status
.data   0x0000      //T
.data   0x00FB      //C
.data   0x0002      //Stim Mode
.data   0x030B      //Rate padding
.data   0x0035      //Width
.data   0x0005      //Gap
.data   0x0021      //Status
.data   0x0000      //T
.data   0x00FB      //C
.data   0x0002      //Stim Mode
.data   0x030B      //Rate padding
.data   0x0035      //Width
.data   0x0005      //Gap
.data   0x0029      //Status
.data   0x0000      //T
.data   0x00FB      //C
.data   0x0002      //Stim Mode
.data   0x030B      //Rate padding
.data   0x0035      //Width
.data   0x0005      //Gap
.data   0x0031      //Status
.data   0x0000      //T
.data   0x00FB      //C
.data   0x0002      //Stim Mode
.data   0x030B      //Rate padding
.data   0x0035      //Width
.data   0x0005      //Gap
.data   0x003B      //Status
.data   0x0000      //T
.data   0x00FB      //C
.data   0x0002      //Stim Mode
.data   0x030B      //Rate padding
.data   0x0035      //Width
.data   0x0005      //Gap
.data   0x0041      //Status
.data   0x0000      //T
.data   0x00FB      //C
.data   0x0002      //Stim Mode
.data   0x030B      //Rate padding
.data   0x0035      //Width
.data   0x0005      //Gap
.data   0x0049      //Status
.data   0x0000      //T
.data   0x00FB      //C
.data   0x0002      //Stim Mode
.data   0x030B      //Rate padding
.data   0x0035      //Width
.data   0x0005      //Gap
.data   0x0051      //Status
.data   0x0000      //T
.data   0x00FB      //C
.data   0x0002      //Stim Mode
.data   0x030B      //Rate padding
.data   0x0035      //Width
.data   0x0005      //Gap
.data   0x0059      //Status
.data   0x0000      //T
.data   0x00FB      //C
.data   0x0002      //Stim Mode
.data   0x030B      //Rate padding
.data   0x0035      //Width
.data   0x0005      //Gap
.data   0x0061      //Status
.data   0x0000      //T
.data   0x00FB      //C
.data   0x0002      //Stim Mode
.data   0x030B      //Rate padding
.data   0x0035      //Width
.data   0x0005      //Gap
.data   0x006B      //Status
.data   0x0000      //T
.data   0x00FB      //C
.data   0x0002      //Stim Mode
.data   0x030B      //Rate padding
.data   0x0035      //Width
.data   0x0005      //Gap
.data   0x0071      //Status
.data   0x0000      //T
.data   0x00FB      //C
.data   0x0002      //Stim Mode
.data   0x030B      //Rate padding
.data   0x0035      //Width
.data   0x0005      //Gap
.data   0x0079      //Status
.data   0x0000      //T
.data   0x00FB      //C
.data   0x0002      //Stim Mode
.data   0x030B      //Rate padding
.data   0x0035      //Width
.data   0x0005      //Gap
.data   0x0081      //Status
.data   0x0000      //T
.data   0x00FB      //C
.data   0x0002      //Stim Mode
.data   0x030B      //Rate padding
.data   0x0035      //Width
.data   0x0005      //Gap
.data   0x0089      //Status
.data   0x0000      //T
.data   0x00FB      //C
.data   0x0002      //Stim Mode
.data   0x030B      //Rate padding
.data   0x0035      //Width
.data   0x0005      //Gap
.data   0x0091      //Status
.data   0x0000      //T
.data   0x00FB      //C
.data   0x0002      //Stim Mode
.data   0x030B      //Rate padding
.data   0x0035      //Width
.data   0x0005      //Gap
.data   0x009B      //Status
.data   0x0000      //T
.data   0x00FB      //C
.data   0x0002      //Stim Mode
.data   0x030B      //Rate padding
.data   0x0035      //Width
.data   0x0005      //Gap
.data   0x00A1      //Status
.data   0x0000      //T
.data   0x00FB      //C
.data   0x0002      //Stim Mode
.data   0x030B      //Rate padding
.data   0x0035      //Width
.data   0x0005      //Gap
.data   0x00A9      //Status
.data   0x0000      //T
.data   0x00FB      //C
.data   0x0002      //Stim Mode
.data   0x030B      //Rate padding
.data   0x0035      //Width
.data   0x0005      //Gap
.data   0x00B1      //Status
.data   0x0000      //T
.data   0x00FB      //C
.data   0x0002      //Stim Mode
.data   0x030B      //Rate padding
.data   0x0035      //Width
.data   0x0005      //Gap
.data   0x00B9      //Status
.data   0x0000      //T
.data   0x00FB      //C
.data   0x0002      //Stim Mode



.data   0x0035      //Width
.data   0x0005      //Gap
.data   0x00C3      //Status
 

    //\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\                      
    //\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\                      

















 
    //
    // Start a relocatable segment for variables in Y-memory
    //
    Sys_Mem_Start_Segment(Y_System_Memory_Reserved, \
                          SYS_MEMSPACE_Y)

    // Allocate memory for Y-memory variables here

    //
    // Start a relocatable segment for variables in XY-memory
    //
    Sys_Mem_Start_Segment(XY_System_Memory_Reserved, \
                          SYS_MEMSPACE_XY)

    // Allocate memory for XY-memory variables here
    
        // The P memory share between CFX and ARM 
    // Start an absolute segment for variables in the ARM Cortex-M3 processor
    // data memory
    //
    // P_PCM_INPUT is an address near the top of the ARM Cortex-M3 processor
    // data memory, just below the stack (of size 2048 bytes, 512 words, or 0x200 words).
    // It must match the corresponding definition in the ARM Cortex-M3 processor part of the
    // application.
    Sys_Mem_Start_Absolute_Segment(P_PCM_INPUT_Reserved,        \
                                   SYS_MEMSPACE_P,              \
                                   (D_CM3_DMEM_TOP - 0x200))

    .global P_PCM_INPUT
    P_PCM_INPUT:
        #rept   255
            .data       0x00000000
        #endr
        
     // P_PCM_RET is an address near the top of the ARM Cortex-M3 processor
     // data memory, just below the P_PCM_INPUT (of size 2056 bytes, 514 words, or 0x202 words).
     // It must match the corresponding definition in the ARM Cortex-M3 processor part of the
     // application.
     Sys_Mem_Start_Absolute_Segment(P_PCM_RET_Reserved,        \
                                   SYS_MEMSPACE_P,               \
                                   (D_CM3_DMEM_TOP - 0x301))
     .global P_PCM_RET
     P_PCM_RET:
        .data           0x00000000
        .data           0x00000000
